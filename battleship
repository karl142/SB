def make_board():
  board=[]
  for i in range(64):
    board.append("[ ]")
  return board

def print_board():
  global board
  sboard = "  ".join(board)
  for i in range(8):
    print(sboard[i*40: (i*40)+40] + '\n')

def rand_pos(boat_size):
  dirTemp = random.randint(4):
  if dirTemp==1: # UP
    xTemp = random.randint(8)
    yTemp = random.randint(boat_size:8)
  elif dirTemp==2: # RIGHT
    xTemp = random.randint(8-boat_size)
    yTemp = random.randint(8)
  elif dirTemp==3: # DOWN
    xTemp = random.randint(8-boat_size)
    yTemp = random.randint(8)
  else: # LEFT
    xTemp = random.randint(boat_size:8)
    yTemp = random.randint(8)
  start_ship = (yTemp - 1)*8 + xTemp
  
  return start_ship, dirTemp, dirMove

def add_ship():
  global board
  solved1=0
  while solved1==0:
    fault=0
    while fault=0:
      xTemp, yTemp, dirTemp, dirMove = rand_pos()
    for i in range(0, boat_size-1):
      if dirTemp==1:
        if board[start_ship - (8*i)] == "[S]":
          check_unblocked +=1
      elif dirTemp==2:
        if board[start_ship + i] == "[S]":
          check_unblocked=1
      elif dirTemp==3:
        if board[start_ship + (8*i)] == "[S]":
          check_unblocked=1
      else:
        if board[start_ship - i] == "[S]":
          check_unblocked=1


    for i in range(0,boat_size-1):
      if dirTemp==1:
        board[start_ship - (8*i)] = "[S]"
      elif dirTemp==2:
        board[start_ship + i] = "[S]"
      elif dirTemp==3:
        board[start_ship + (8*i)] = "[S]"
      else:
        board[start_ship - i] = "[S]"
      
        
        
        

    

  

board = make_board()
print_board()



boat1 = 5
boat2 = 4
boat3 = 3
boat4 = 3
boat5 = 2
