import random 
# List of possible words
a=["awkward","bagpipes","banjo","bungler","croquet","crypt","dwarves","fervid","fishhook","fjord","gazebo","gypsy","haiku","haphazard","hyphen","ivory","jazzy","jiffy","jinx","jukebox","kayak","kiosk","klutz","memento","mystify","numbskull","ostracize","oxygen","pajama","phlegm","pixel","polka","quad","quip","rhythmic","rogue","sphinx","squawk","swivel","toady","twelfth","unzip","waxy","wildebeest","yacht","zealous","zigzag","zippy","zombie"]

#Initializations
wrong_guesses = [] #Will house previously guessed wrong letters
correct_guesses = [] #Will house correctly guessed letters in place
lifetotal = 6 #Number of incorrect guesses before losing
solved = 0 #Trigger for later while loop. When solved=1, loop ends
corrnum=0

print("HANGMAN")

#This function chooses word from list and returns word and a list of "_"s equal to the length fo the word.
def create_word():
  choice = random.randint(1,49)
  word = a[choice]
  for i in range(len(word)):
    correct_guesses.append("_")
  return word, correct_guesses

#This function first prints the status (wrong / correct guesses / life total)
#Next, it checks if the letter is in the word and/or wrong guesses Index
#If successful, adds letters in, if unsuccessful removes one life and adds incorrect letter to wrong_guesses
#Finally returns values

def letter_guess(word, wrong_guesses, correct_guesses, lifetotal,corrnum):
  print("Wrong Guesses: ")
  print(wrong_guesses)
  print("\n"+"Current Hits: ")
  print(correct_guesses)
  print("\n"+"Life total: "+ str(lifetotal) + "\n")

  guess = input("Guess a letter: ")

  if guess in word and not guess in wrong_guesses:
    for letter in word:
      count=0
      if letter == guess:
        correct_guesses[count]=guess
        print("Correct! \"" + guess + "\n"" is in the target word!")
        corrnum += 1
      count += 1
  elif guess in wrong_guesses:
    print("You have already guessed " + guess + ". It is not in the target word")
  else:
    print ("Sorry! " + guess + " is not in the target word!")
    lifetotal -= 1
    wrong_guesses.append(guess)
  return correct_guesses, wrong_guesses, lifetotal, corrnum

#Loops through until solved=1 (achieved when len(word) == len(correct_guesses))
def game_loop(word, wrong_guesses, correct_guesses, lifetotal, corrnum):
  solved=0
  while solved==0:
    correct_guesses, wrong_guesses, lifetotal, corrnum = letter_guess(word, wrong_guesses, correct_guesses, lifetotal, corrnum)
    print("\n \n \n")
    if len(word) == corrnum:
      solved=1



word, correct_guesses = create_word()
game_loop(word, wrong_guesses, correct_guesses, lifetotal, corrnum)
